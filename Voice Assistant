import speech_recognition as sr
import pyttsx3
import pywhatkit
import wikipedia
import pyjokes
import datetime

# Initialize text-to-speech engine
engine = pyttsx3.init()

# Set the voice rate (speed) and volume
engine.setProperty('rate', 150)
engine.setProperty('volume', 0.9)

# Set the voice (male or female)
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)  # Use voices[0] for male, voices[1] for female

def speak(text):
    """Convert text to speech."""
    engine.say(text)
    engine.runAndWait()

def listen():
    """Capture voice input from the user."""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)
    try:
        print("Recognizing...")
        command = recognizer.recognize_google(audio)
        command = command.lower()
        print(f"You said: {command}")
    except sr.UnknownValueError:
        speak("Sorry, I didn't understand that. Could you please repeat?")
        return None
    except sr.RequestError:
        speak("Sorry, I am unable to connect to the speech recognition service.")
        return None
    return command

def handle_command(command):
    """Process the user's voice command."""
    if "play" in command:
        song = command.replace("play", "").strip()
        speak(f"Playing {song} on YouTube")
        pywhatkit.playonyt(song)
    elif "time" in command:
        current_time = datetime.datetime.now().strftime("%I:%M %p")
        speak(f"The current time is {current_time}")
    elif "search for" in command or "who is" in command:
        topic = command.replace("search for", "").replace("who is", "").strip()
        info = wikipedia.summary(topic, sentences=2)
        speak(f"According to Wikipedia: {info}")
    elif "joke" in command:
        joke = pyjokes.get_joke()
        speak(joke)
    elif "date" in command:
        speak("I am just a program, but thank you for asking!")
    elif "exit" in command or "stop" in command:
        speak("Goodbye!")
        exit()
    else:
        speak("I'm sorry, I can't perform that task yet.")

# Main loop
# Main loop
def main():
    speak("Hello, I am your voice assistant. How can I help you today?")
    while True:
        command = listen()
        if command:
            if "exit" in command or "stop" in command:
                speak("Goodbye!")
                break  # Exit the loop
            handle_command(command)

if __name__ == "__main__":
    main()
